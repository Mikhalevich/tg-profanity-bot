version: "3"
services:
  bot:
    build:
      context: ../../
      dockerfile: script/docker/bot.Dockerfile
    depends_on:
      rabbit:
        condition: service_healthy
      sql-migrate:
        condition: service_completed_successfully
    networks:
      - bot-net
  worker:
    build:
      context: ../../
      dockerfile: script/docker/consumer.Dockerfile
    depends_on:
      rabbit:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bot-net
  rabbit:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 30s
      retries: 3
    networks:
      - bot-net
  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "14268:14268"
      - "16686:16686"
      - "4318:4318"
    networks:
      - bot-net
  postgres:
    image: postgres:16.3-alpine3.20
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: bot
      POSTGRES_USER: bot
      POSTGRES_PASSWORD: bot
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bot"]
      interval: 2s
      timeout: 2s
      retries: 10
    networks:
      - bot-net
  sql-migrate:
    build:
      context: ../../
      dockerfile: script/docker/sql-migrate.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bot-net
  redis:
    image: redis:7.0.15
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=redis123
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 2s
      timeout: 2s
      retries: 10
    networks:
      - bot-net
networks:
  bot-net:
    driver: bridge